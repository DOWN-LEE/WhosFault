[{"/home/ubuntu/WhosFault/frontend/src/index.js":"1","/home/ubuntu/WhosFault/frontend/src/App.js":"2","/home/ubuntu/WhosFault/frontend/src/reportWebVitals.js":"3","/home/ubuntu/WhosFault/frontend/src/store/store.js":"4","/home/ubuntu/WhosFault/frontend/src/Riot.js":"5","/home/ubuntu/WhosFault/frontend/src/Home/Home.js":"6","/home/ubuntu/WhosFault/frontend/src/Home/result.js":"7","/home/ubuntu/WhosFault/frontend/src/Home/RankBox.js":"8","/home/ubuntu/WhosFault/frontend/src/Home/SearchBar.js":"9","/home/ubuntu/WhosFault/frontend/src/Home/UserInfo.js":"10","/home/ubuntu/WhosFault/frontend/src/api/index.js":"11","/home/ubuntu/WhosFault/frontend/src/match/match.js":"12","/home/ubuntu/WhosFault/frontend/src/match/userbox.js":"13"},{"size":648,"mtime":1620900031008,"results":"14","hashOfConfig":"15"},{"size":833,"mtime":1620904754335,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":1620900031008,"results":"17","hashOfConfig":"15"},{"size":641,"mtime":1620900031008,"results":"18","hashOfConfig":"15"},{"size":321,"mtime":1620908775552,"results":"19","hashOfConfig":"15"},{"size":1698,"mtime":1620900030888,"results":"20","hashOfConfig":"15"},{"size":15582,"mtime":1620900030888,"results":"21","hashOfConfig":"15"},{"size":3487,"mtime":1620900030888,"results":"22","hashOfConfig":"15"},{"size":3054,"mtime":1620900030888,"results":"23","hashOfConfig":"15"},{"size":2816,"mtime":1620900030888,"results":"24","hashOfConfig":"15"},{"size":764,"mtime":1620900030888,"results":"25","hashOfConfig":"15"},{"size":9796,"mtime":1620900031008,"results":"26","hashOfConfig":"15"},{"size":1017,"mtime":1620900031008,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"kd886s",{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":28,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":29,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61"},"/home/ubuntu/WhosFault/frontend/src/index.js",[],"/home/ubuntu/WhosFault/frontend/src/App.js",["62"],"import { Route, Redirect, Switch } from 'react-router-dom';\nimport { ConnectedRouter } from 'connected-react-router';\nimport './App.css';\nimport React from 'react';\n\nimport Home from './Home/Home';\nimport Result from './Home/result';\nimport Riot from './Riot';\n\nimport riot from './store/riot.txt';\n\nfunction App(props) {\n  return (\n    <ConnectedRouter history={props.history}>\n      <div className=\"App\" data-testid=\"App\">\n        <Switch>\n          <Route path=\"/home\" exact component={Home} />\n          <Route path='/result/:username' exact component={Result}/>\n          <Route path='/riot.txt' exact component={riot}/>\n          <Redirect exact from=\"/\" to=\"home\" />\n          <Route render={() => <h1 data-testid=\"NotFound\">Not Found</h1>} />\n        </Switch>\n      </div>\n    </ConnectedRouter>\n  );\n}\n\nexport default App;\n","/home/ubuntu/WhosFault/frontend/src/reportWebVitals.js",[],"/home/ubuntu/WhosFault/frontend/src/store/store.js",[],"/home/ubuntu/WhosFault/frontend/src/Riot.js",["63","64","65"],"/home/ubuntu/WhosFault/frontend/src/Home/Home.js",["66","67","68","69","70"],"import React, { useState, useEffect } from 'react';\r\nimport { Dropdown, Input, Header,Image,Container  } from 'semantic-ui-react'\r\nimport './Home.css';\r\n\r\nimport finger from '../image/finger.svg';\r\nimport pepe_q from '../image/pepe_question.jpg';\r\n\r\nconst options = [\r\n    { key: 'KR', text: 'KR', value: 'KR' },\r\n    { key: 'NA', text: 'NA', value: 'NA' },\r\n    { key: 'VIET', text: 'VIET', value: 'VIET' },\r\n]\r\n\r\n\r\nconst MainPage = (props) => {\r\n    const[inputvalue, setinput] = useState('')\r\n\r\n    const handleClick =()=>{\r\n        if(inputvalue!='')\r\n            props.history.push('result/'+inputvalue);\r\n    }\r\n\r\n    const handleKey=(e)=>{\r\n        if(e.key=='Enter' && inputvalue!=''){\r\n            props.history.push('result/'+inputvalue);\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <br/>\r\n            <Header  className='logo_title'>\r\n                <Image src={finger}/>\r\n                누구 탓?\r\n            </Header>\r\n            <Input\r\n                label={<Dropdown defaultValue='KR' options={options} />}\r\n                labelPosition='left'\r\n                placeholder='소환사명을 적어주세요!'\r\n                action={{content:'GO!', onClick: handleClick }}\r\n                size='large'\r\n                className='summoner_search'\r\n                onChange={e=>setinput(e.target.value)}\r\n                onKeyPress={e=>handleKey(e)}\r\n            />\r\n\r\n            <br/> <br/> <br/> <br/> <br/>\r\n            <div className='pepe_q'>\r\n                <Image src={pepe_q} className='pepe_q'/>\r\n                <Header>승급 못하는 이유는 팀탓? 내탓?</Header>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MainPage;","/home/ubuntu/WhosFault/frontend/src/Home/result.js",["71","72","73","74","75","76","77","78","79","80","81","82","83","84","85","86","87","88","89","90","91","92","93","94","95","96","97","98"],"import React, { useState, useEffect } from 'react';\r\nimport { Dropdown, Input, Header,Image, Container, Menu, Grid, Form, Segment, Loader  } from 'semantic-ui-react'\r\n\r\nimport finger from '../image/finger.svg';\r\nimport RankBox from './RankBox';\r\nimport Match from '../match/match';\r\nimport pepe_q from '../image/pepe_question.jpg';\r\nimport { api } from '../api/index';\r\nimport './result.css';\r\nimport SearchBar from './SearchBar';\r\nimport UserInfo from './UserInfo';\r\n\r\nimport question from '../image/pepe_question.jpg';\r\nimport siba from '../image/siba.png';\r\nimport shit1 from '../image/shit1.png';\r\nimport shit2 from '../image/shit2.jpg';\r\nimport shit3 from '../image/shit3.jpg';\r\n\r\nconst options = [\r\n    { key: 'KR', text: 'KR', value: 'KR' },\r\n    { key: 'NA', text: 'NA', value: 'NA' },\r\n    { key: 'VIET', text: 'VIET', value: 'VIET' },\r\n]\r\n\r\nconst resultimg= (average, len)=>{\r\n    if(len==0){\r\n        return [pepe_q, '경기가 부족합니다']\r\n    }\r\n    let score = average/len;\r\n   \r\n\r\n    if(score <=3){\r\n        return[siba, '훌륭한 경기력!....']\r\n    }\r\n    if(score <= 5){\r\n        return[shit1, '분발해라 뒤지기 싫으면']\r\n    }\r\n    if(score <= 7){\r\n        return[shit2, '니 때문에 니 팀이 지는거야']\r\n    }\r\n    return [shit3, '당신은 가망이 없습니다. 제발 롤 삭제해주세요!']\r\n\r\n}\r\n\r\nvar ex_p = {\r\n    \"summonerName\": \"원스타교장샘\",\r\n    \"champion\": \"Irelia\",\r\n    \"level\": 11,\r\n    \"cs\": 145,\r\n    \"kills\": 1,\r\n    \"deaths\":5,\r\n    \"assists\":15,\r\n    \"position\":\"TOP\",\r\n    \"item0\":1055,\r\n    \"item6\":1055,\r\n    \"spell1\":4,\r\n    \"spell2\":14,\r\n    \"ranking\":1,\r\n    \"win\":true,\r\n}\r\nvar ex_match=[\r\n    {\r\n        \"queueId\": 420,\r\n    \r\n        \"gameDuration\": 11,\r\n        \"gameCreation\": 11,\r\n        \"participants\":{\r\n            \"1\":ex_p,\r\n            \"2\":ex_p,\r\n            \"3\":ex_p,\r\n            \"4\":ex_p,\r\n            \"5\":ex_p,\r\n            \"6\":ex_p,\r\n            \"7\":ex_p,\r\n            \"8\":ex_p,\r\n            \"9\":ex_p,\r\n            \"10\":ex_p,\r\n        },\r\n    \r\n    },\r\n    {\r\n        \"queueId\": 420,\r\n    \r\n        \"gameDuration\": 11,\r\n        \"gameCreation\": 11,\r\n        \"participants\":{\r\n            \"1\":ex_p,\r\n            \"2\":ex_p,\r\n            \"3\":ex_p,\r\n            \"4\":ex_p,\r\n            \"5\":ex_p,\r\n            \"6\":ex_p,\r\n            \"7\":ex_p,\r\n            \"8\":ex_p,\r\n            \"9\":ex_p,\r\n            \"10\":ex_p,\r\n        },\r\n    \r\n    }\r\n]\r\n\r\n\r\nconst Result = (props) => {\r\n\r\n    const [userReady, setUserReady] = useState(0); // -2: error, -1: 없는유저, 0: 로딩중, 1: 정상\r\n    const [matchReady, setMatchReady] = useState(0); // 0: 로딩중, 1: 정상\r\n    const [userName, set_Name] = useState('원스타교장샘');\r\n    const [userLevel, set_Level] = useState('100');\r\n    const [userProfile, set_Profile] = useState('10');\r\n    const [userSoloRank, set_Solo] = useState({'rank':11, 'wins':15, 'losses':3});\r\n    const [userFlexRank, set_Flex] = useState({'rank':11, 'wins':3, 'losses':1});\r\n    const [matches, set_matches] = useState(ex_match);\r\n    const [average, set_av] = useState(0);\r\n\r\n\r\n\r\n    useEffect(()=>{\r\n        \r\n        if(userReady==0){\r\n            api.get('/user/'+props.match.params.username+'/').then((response)=>{\r\n                \r\n                var result = response.data;\r\n                set_Name(result['user_name']);\r\n                set_Level(result['user_level']);\r\n                set_Profile(result['user_profile']);\r\n                set_Solo(result['solo_rank']);\r\n                set_Flex(result['flex_rank']);\r\n                setUserReady(1);\r\n            \r\n                \r\n            }).catch((response)=>{\r\n                if(response.response.status == 404){\r\n                \r\n                    setUserReady(-1);\r\n                }\r\n                else{\r\n                    \r\n                    setUserReady(-2);\r\n                }\r\n            });\r\n        }     \r\n\r\n    },[userReady]);\r\n\r\n    useEffect(()=>{\r\n        if(userReady==1){\r\n            api.get('/match/'+props.match.params.username+'/').then((response)=>{\r\n                var result = response.data;\r\n                let rank=0;\r\n                for(var idx=0; idx < result.length; idx++){\r\n                    for(var pos=1; pos<=10; pos++){\r\n                        if(result[idx][\"participants\"][String(pos)][\"summonerName\"]==userName){\r\n                            rank += result[idx][\"participants\"][String(pos)][\"ranking\"];\r\n                            \r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                set_av(rank)\r\n                set_matches(result);\r\n                setMatchReady(1);\r\n            });\r\n        }\r\n    },[userReady]);\r\n\r\n   \r\n\r\n    // if (beReady)\r\n    // {\r\n    //     return(\r\n    //         <div>\r\n                \r\n    //             <Grid className='Headerbar'  columns='equal'>\r\n    //                 <Grid.Column  textAlign='right' verticalAlign='middle' only='computer'>\r\n    //                     <Header  className='logo_title_small' onClick={()=>clickHeader()}>\r\n    //                             <Image src={finger}/>\r\n    //                         누구 탓?\r\n    //                     </Header>\r\n    //                 </Grid.Column>\r\n    //                 <Grid.Column verticalAlign='middle'  only='computer'>\r\n    //                     <Input\r\n    //                         label={<Dropdown defaultValue='KR' options={options} />}\r\n    //                         labelPosition='left'\r\n    //                         placeholder='소환사명을 적어주세요!'\r\n    //                         action={{content:'GO!1', onClick: handleClick }}\r\n    //                         size='large'\r\n    //                         className='summoner_search'\r\n    //                         onChange={e=>setinput(e.target.value)}\r\n    //                         onKeyPress={e=>handleKey(e)}\r\n    //                     />\r\n    //                 </Grid.Column>\r\n    //                 <Grid.Column only='computer'/>\r\n\r\n    //                 <Grid.Row only='tablet mobile' centered>\r\n    //                     <Header  className='logo_title_small' onClick={()=>clickHeader()}>\r\n    //                             <Image src={finger}/>\r\n    //                         누구 탓?\r\n    //                     </Header>\r\n    //                 </Grid.Row>\r\n    //                 <Grid.Row only='tablet mobile' centered>\r\n    //                     <Input\r\n    //                         label={<Dropdown defaultValue='KR' options={options} />}\r\n    //                         labelPosition='left'\r\n    //                         placeholder='소환사명을 적어주세요!'\r\n    //                         icon = 'search'\r\n    //                         action={{onClick: handleClick }}\r\n    //                         className='summoner_search_mobile'\r\n    //                         onChange={e=>setinput(e.target.value)}\r\n    //                         onKeyPress={e=>handleKey(e)}\r\n    //                     />\r\n    //                 </Grid.Row>\r\n    //             </Grid>\r\n\r\n    //             <Container>\r\n                    \r\n    //             <Grid>\r\n    //                 <Grid.Row only='tablet mobile' verticalAlign='middle'>\r\n    //                     <span>\r\n    //                     <img src={'http://ddragon.leagueoflegends.com/cdn/11.3.1/img/profileicon/'+userProfile+'.png'} className='profile_img_mobile'/>\r\n    //                     </span>\r\n    //                     <span>\r\n    //                     <div className='profile_name_mobile'>\r\n    //                         {userName}\r\n    //                     </div>\r\n    //                     <div className='profile_level_mobile'>\r\n    //                         LV. {userLevel}\r\n    //                     </div>\r\n    //                     </span>\r\n                        \r\n    //                 </Grid.Row>\r\n    //             </Grid>\r\n\r\n\r\n    //             <Segment  className='profile_box'>\r\n    //             <Grid>\r\n                    \r\n    //                 <Grid.Row  only='computer' columns={2}>\r\n    //                     <Grid.Column textAlign='left'>\r\n    //                         <span>\r\n    //                             <span>\r\n    //                             <img src={'http://ddragon.leagueoflegends.com/cdn/11.3.1/img/profileicon/'+userProfile+'.png'} className='profile_img'/>\r\n    //                             </span> \r\n    //                             <span className='profile_name'>\r\n    //                             <div className='profile_name1'>\r\n    //                                 {userName}\r\n    //                             </div>\r\n    //                             <div className='profile_level'>\r\n    //                                 LV. {userLevel}\r\n    //                             </div>\r\n    //                             </span>\r\n    //                         </span>\r\n    //                     </Grid.Column>\r\n    //                     <Grid.Column textAlign='right'  >\r\n                    \r\n    //                         <RankBox rankinfo={userFlexRank} isSolo={false}/>  \r\n                            \r\n    //                         <RankBox rankinfo={userSoloRank} isSolo={true}/>\r\n                                    \r\n                            \r\n    //                     </Grid.Column>\r\n    //                 </Grid.Row>\r\n\r\n    //                 <Grid.Row only='tablet mobile' centered ci   >\r\n                        \r\n                    \r\n    //                         <RankBox rankinfo={userSoloRank} mobile={true} className='mobile_box1' isSolo={true}/>\r\n    //                         <RankBox rankinfo={userFlexRank} mobile={true} className='mobile_box2' isSolo={false}/>\r\n                        \r\n\r\n    //                 </Grid.Row>\r\n                \r\n    //             </Grid>\r\n\r\n    //             </Segment>\r\n            \r\n                \r\n\r\n            \r\n    //                 <h1>분석결과</h1>\r\n    //                 <img className ='resultimg' src={resultimg(average, matches.length)[0]}/>\r\n    //                 <h1>{resultimg(average, matches.length)[1]}</h1>\r\n\r\n    //                 {matches.map((match, i) => <Match info={match} key={i}/>)}\r\n    //             </Container>\r\n    //         </div>\r\n    //     )\r\n    // }\r\n    // else\r\n    // {\r\n    //     return(\r\n    //         <div>\r\n    //             <Grid className='Headerbar'  columns='equal'>\r\n    //                 <Grid.Column  textAlign='right' verticalAlign='middle' only='computer'>\r\n    //                     <Header  className='logo_title_small' onClick={()=>clickHeader()}>\r\n    //                             <Image src={finger}/>\r\n    //                         누구 탓?\r\n    //                     </Header>\r\n    //                 </Grid.Column>\r\n    //                 <Grid.Column verticalAlign='middle'  only='computer'>\r\n    //                     <Input\r\n    //                         label={<Dropdown defaultValue='KR' options={options} />}\r\n    //                         labelPosition='left'\r\n    //                         placeholder='소환사명을 적어주세요!'\r\n    //                         action={{content:'GO!', onClick: handleClick }}\r\n    //                         size='large'\r\n    //                         className='summoner_search'\r\n    //                         onChange={e=>setinput(e.target.value)}\r\n    //                         onKeyPress={e=>handleKey(e)}\r\n    //                     />\r\n    //                 </Grid.Column>\r\n    //                 <Grid.Column only='computer'/>\r\n\r\n    //                 <Grid.Row only='tablet mobile' centered>\r\n    //                     <Header  className='logo_title_small' onClick={()=>clickHeader()}>\r\n    //                             <Image src={finger}/>\r\n    //                         누구 탓?\r\n    //                     </Header>\r\n    //                 </Grid.Row>\r\n    //                 <Grid.Row only='tablet mobile' centered>\r\n    //                     <Input\r\n    //                         label={<Dropdown defaultValue='KR' options={options} />}\r\n    //                         labelPosition='left'\r\n    //                         placeholder='소환사명을 적어주세요!'\r\n    //                         icon = 'search'\r\n    //                         action={{onClick: handleClick }}\r\n    //                         className='summoner_search_mobile'\r\n    //                         onChange={e=>setinput(e.target.value)}\r\n    //                         onKeyPress={e=>handleKey(e)}\r\n    //                     />\r\n    //                 </Grid.Row>\r\n    //             </Grid>\r\n\r\n    //             <br/><br/><br/><br/><br/><br/><br/><br/>\r\n    //             <Loader active inline='centered' className='loading_icon'/>\r\n    //         </div>\r\n    //     )\r\n    // }\r\n\r\n \r\n    if(userReady == 0){\r\n        return(\r\n            <div>\r\n                <SearchBar history={props.history} setUserReady={setUserReady} setMatchReady={setMatchReady}/>\r\n                <br/><br/><br/><br/><br/><br/><br/><br/>\r\n                <Loader active inline='centered' className='loading_icon'/>\r\n                {/* <UserInfo userName={userName} userLevel={userLevel} userProfile={userProfile} userFlexRank={userFlexRank}\r\n                userSoloRank={userSoloRank}/>\r\n\r\n                \r\n                <h1>분석결과</h1>\r\n                <img className ='resultimg' src={resultimg(average, matches.length)[0]}/>\r\n                <h1>{resultimg(average, matches.length)[1]}</h1>\r\n\r\n                {matches.map((match, i) => <Match info={match} user={userName} key={i}/>)} */}\r\n            </div>\r\n        )\r\n    }\r\n    else if(userReady == -2){\r\n        return(\r\n            <div>\r\n                <SearchBar history={props.history} setUserReady={setUserReady} setMatchReady={setMatchReady}/>\r\n                <br/><br/><br/><br/><br/><br/><br/><br/>\r\n                Error 발생!\r\n            </div>\r\n        )\r\n    }\r\n    else if(userReady == -1){\r\n        return(\r\n            <div>\r\n                <SearchBar history={props.history} setUserReady={setUserReady} setMatchReady={setMatchReady}/>\r\n                <br/><br/><br/><br/><br/><br/><br/><br/>\r\n                없는 소환사!\r\n            </div>\r\n        )\r\n    }\r\n    else if(userReady == 1 && matchReady == 0){\r\n        return(\r\n            <div>\r\n                <SearchBar history={props.history} setUserReady={setUserReady} setMatchReady={setMatchReady}/>\r\n                <UserInfo userName={userName} userLevel={userLevel} userProfile={userProfile} userFlexRank={userFlexRank}\r\n                userSoloRank={userSoloRank}/>\r\n                <Loader active inline='centered' className='loading_icon'/>\r\n\r\n            </div>\r\n        )\r\n    }\r\n    else if(userReady == 1 && matchReady == 1){\r\n        return(\r\n            <div>\r\n                <SearchBar history={props.history} setUserReady={setUserReady} setMatchReady={setMatchReady}/>\r\n                <UserInfo userName={userName} userLevel={userLevel} userProfile={userProfile} userFlexRank={userFlexRank}\r\n                userSoloRank={userSoloRank}/>\r\n                \r\n                <h1>분석결과</h1>\r\n                <img className ='resultimg' src={resultimg(average, matches.length)[0]}/>\r\n                <h1>{resultimg(average, matches.length)[1]}</h1>\r\n\r\n                {matches.map((match, i) => <Match info={match} user={userName} key={i}/>)}\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default Result;","/home/ubuntu/WhosFault/frontend/src/Home/RankBox.js",["99","100","101","102","103","104","105","106","107","108","109","110","111","112","113","114","115","116","117","118","119","120","121","122","123"],"import React, { useState, useEffect } from 'react';\r\nimport { Dropdown, Input, Header,Image, Container, Menu, Grid, Form, Segment, Icon  } from 'semantic-ui-react'\r\n\r\nimport unrank from '../image/unrank.png';\r\nimport iron from '../image/Emblem_Iron.png';\r\nimport bronze from '../image/Emblem_Bronze.png';\r\nimport silver from '../image/Emblem_Silver.png';\r\nimport gold from '../image/Emblem_Gold.png';\r\nimport platinum from '../image/Emblem_Platinum.png';\r\nimport diamond from '../image/Emblem_Diamond.png';\r\nimport master from '../image/Emblem_Master.png';\r\nimport grandmaster from '../image/Emblem_Grandmaster.png';\r\nimport challenger from '../image/Emblem_Challenger.png';\r\n\r\nimport './RankBox.css';\r\n\r\n\r\nconst rankTo=(rank)=>{\r\n    let r = String(rank);\r\n    if(r.length==1){\r\n        return 'IRON ' + r\r\n    }\r\n    if(r[0]==1){\r\n        return 'BRONZE ' + r[1]\r\n    }\r\n    if(r[0]==2){\r\n        return 'SILVER ' + r[1]\r\n    }\r\n    if(r[0]==3){\r\n        return 'GOLD ' + r[1]\r\n    }\r\n    if(r[0]==4){\r\n        return 'PLATINUM ' + r[1]\r\n    }\r\n    if(r[0]==5){\r\n        return 'DIAMOND ' + r[1]\r\n    }\r\n    if(r[0]==6){\r\n        return 'MASTER '\r\n    }\r\n    if(r[0]==7){\r\n        return 'GRANDMASTER '\r\n    }\r\n    if(r[0]==8){\r\n        return 'CHALLENGER '\r\n    }\r\n    return 'UNKNOWN'\r\n}\r\n\r\nconst rankimg=(rank)=>{\r\n    if(rank=='UNRANK')\r\n        return unrank\r\n    if(rank.includes('BRONZE'))\r\n        return bronze\r\n    if(rank.includes('SILVER'))\r\n        return silver\r\n    if(rank.includes('GOLD'))\r\n        return gold\r\n    if(rank.includes('PLATINUM'))\r\n        return platinum\r\n    if(rank.includes('DIAMOND'))\r\n        return diamond\r\n    if(rank.includes('MASTER'))\r\n        return master\r\n    if(rank.includes('GRANDMASTER'))\r\n        return grandmaster\r\n    if(rank.includes('CHALLENGER'))\r\n        return challenger\r\n\r\n    return unrank\r\n\r\n}\r\n\r\nconst RankBox=(props)=>{\r\n    const [wins, set_win] = useState('');\r\n    const [losses, set_loss] = useState('');\r\n    const [rank, set_rank] = useState('')\r\n\r\n\r\n\r\n    useEffect(()=>{\r\n        if(props.rankinfo['rank'] != 0){\r\n            set_rank(rankTo(props.rankinfo['rank']))\r\n            set_win(String(props.rankinfo['wins'])+'승 ')\r\n            set_loss(String(props.rankinfo['losses'])+'패')\r\n        }\r\n        else{\r\n            set_rank('UNRANK')\r\n        }\r\n    })\r\n\r\n    if (props.mobile){\r\n        return(\r\n            <div className={props.className}>\r\n           \r\n            <span>\r\n                <img src={rankimg(rank)} style={{height:'5rem'}}/>\r\n            </span>\r\n            <span className='rankbox_info_mobile'>\r\n\r\n                <div>\r\n                {props.isSolo? '솔랭':'자랭'}  \r\n                </div>\r\n                <div>\r\n                {rank}\r\n                </div>\r\n                <div>\r\n                {wins} {losses}\r\n                </div>\r\n            </span>\r\n            \r\n            </div>\r\n        )\r\n    }\r\n    return(\r\n        <div className='rankbox'>\r\n           \r\n            <span>\r\n                <img src={rankimg(rank)} style={{height:'100px'}}/>\r\n            </span>\r\n            <span className='rankbox_info'>\r\n\r\n                <div>\r\n                {props.isSolo? '솔랭':'자랭'} \r\n                </div>\r\n                <div>\r\n                {rank}\r\n                </div>\r\n                <div>\r\n                {wins} {losses}\r\n                </div>\r\n            </span>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RankBox;","/home/ubuntu/WhosFault/frontend/src/Home/SearchBar.js",["124","125","126","127","128","129","130"],"import React, { useState, useEffect } from 'react';\r\nimport { Dropdown, Input, Header,Image, Container, Menu, Grid, Form, Segment, Button  } from 'semantic-ui-react'\r\nimport finger from '../image/finger.svg';\r\n\r\nimport './SearchBar.css';\r\n\r\n\r\nconst options = [\r\n    { key: 'KR', text: 'KR', value: 'KR' },\r\n    { key: 'NA', text: 'NA', value: 'NA' },\r\n    { key: 'VIET', text: 'VIET', value: 'VIET' },\r\n]\r\n\r\n\r\nconst SearchBar = (props) =>{\r\n\r\n    const[inputvalue, setinput] = useState('')\r\n  \r\n\r\n    const clickHeader =()=>{\r\n        props.history.push('/home');\r\n    }\r\n\r\n     const handleClick =()=>{\r\n        props.history.push(inputvalue);\r\n        props.setMatchReady(0);\r\n        props.setUserReady(0);\r\n    }\r\n\r\n    const handleKey=(e)=>{\r\n        if(e.key=='Enter'){\r\n            props.history.push(inputvalue);\r\n            props.setMatchReady(0);\r\n            props.setUserReady(0);\r\n        }\r\n    }\r\n    \r\n    return(\r\n        <div>\r\n            <Grid className='Headerbar'  columns='equal'>\r\n                <Grid.Column  textAlign='right' verticalAlign='middle' only='computer'>\r\n                    <Header  className='logo_title_small' onClick={()=>clickHeader()}>\r\n                            <Image src={finger}/>\r\n                        누구 탓?\r\n                    </Header>\r\n                </Grid.Column>\r\n                <Grid.Column verticalAlign='middle'  only='computer'>\r\n                    <Input\r\n                        label={<Dropdown defaultValue='KR' options={options} />}\r\n                        labelPosition='left'\r\n                        placeholder='소환사명을 적어주세요!'\r\n                       \r\n                        size='large'\r\n                        className='summoner_search'\r\n                        onChange={e=>setinput(e.target.value)}\r\n                        onKeyPress={e=>handleKey(e)}\r\n                    />\r\n                </Grid.Column>\r\n                    \r\n                <Grid.Column only='computer' verticalAlign='left'>\r\n                \r\n                </Grid.Column>\r\n\r\n                <Grid.Row only='tablet mobile' centered>\r\n                    <Header  className='logo_title_small' onClick={()=>clickHeader()}>\r\n                            <Image src={finger}/>\r\n                        누구 탓?\r\n                    </Header>\r\n                </Grid.Row>\r\n                <Grid.Row only='tablet mobile' centered>\r\n                    <Input\r\n                        label={<Dropdown defaultValue='KR' options={options} />}\r\n                        labelPosition='left'\r\n                        placeholder='소환사명을 적어주세요!'\r\n                        icon = 'search'\r\n                        action={{onClick: handleClick }}\r\n                        className='summoner_search_mobile'\r\n                        onChange={e=>setinput(e.target.value)}\r\n                        onKeyPress={e=>handleKey(e)}\r\n                    />\r\n                </Grid.Row>\r\n            </Grid>\r\n\r\n        </div> \r\n    )\r\n}\r\n\r\n\r\nexport default SearchBar;","/home/ubuntu/WhosFault/frontend/src/Home/UserInfo.js",["131","132","133","134","135","136","137","138","139","140","141","142"],"import React, { useState, useEffect } from 'react';\r\nimport { Dropdown, Input, Header,Image, Container, Menu, Grid, Form, Segment, Loader  } from 'semantic-ui-react'\r\nimport RankBox from './RankBox';\r\n\r\nimport './UserInfo.css';\r\n\r\n\r\nconst UserInfo = (props) => {\r\n\r\n    return(\r\n        <div>\r\n            <Grid>\r\n                <Grid.Row only='tablet mobile' verticalAlign='middle'>\r\n                    <span>\r\n                    <img src={'http://ddragon.leagueoflegends.com/cdn/11.3.1/img/profileicon/'+props.userProfile+'.png'} className='profile_img_mobile'/>\r\n                    </span>\r\n                    <span>\r\n                    <div className='profile_name_mobile'>\r\n                        {props.userName}\r\n                    </div>\r\n                    <div className='profile_level_mobile'>\r\n                        LV. {props.userLevel}\r\n                    </div>\r\n                    </span>\r\n                    \r\n                </Grid.Row>\r\n            </Grid>\r\n\r\n\r\n            <Segment  className='profile_box'>\r\n            <Grid>\r\n                \r\n                <Grid.Row  only='computer' columns={2}>\r\n                    <Grid.Column textAlign='left'>\r\n                        <span>\r\n                            <span>\r\n                            <img src={'http://ddragon.leagueoflegends.com/cdn/11.3.1/img/profileicon/'+props.userProfile+'.png'} className='profile_img'/>\r\n                            </span> \r\n                            <span className='profile_name'>\r\n                            <div className='profile_name1'>\r\n                                {props.userName}\r\n                            </div>\r\n                            <div className='profile_level'>\r\n                                LV. {props.userLevel}\r\n                            </div>\r\n                            </span>\r\n                        </span>\r\n                    </Grid.Column>\r\n                    <Grid.Column textAlign='right'  >\r\n                \r\n                        <RankBox rankinfo={props.userFlexRank} isSolo={false}/>  \r\n                        \r\n                        <RankBox rankinfo={props.userSoloRank} isSolo={true}/>\r\n                                \r\n                        \r\n                    </Grid.Column>\r\n                </Grid.Row>\r\n\r\n                <Grid.Row only='tablet mobile' centered ci   >\r\n                    \r\n                \r\n                        <RankBox rankinfo={props.userSoloRank} mobile={true} className='mobile_box1' isSolo={true}/>\r\n                        <RankBox rankinfo={props.userFlexRank} mobile={true} className='mobile_box2' isSolo={false}/>\r\n                    \r\n\r\n                </Grid.Row>\r\n            \r\n            </Grid>\r\n\r\n            </Segment>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default UserInfo;","/home/ubuntu/WhosFault/frontend/src/api/index.js",[],"/home/ubuntu/WhosFault/frontend/src/match/match.js",["143","144","145","146","147","148","149","150","151","152","153","154","155","156","157","158","159","160","161","162","163","164","165","166","167","168","169","170","171"],"import React, { useState, useEffect } from 'react';\r\nimport { Dropdown, Input, Header,Image, Container, Menu, Grid, Form, Segment, Icon  } from 'semantic-ui-react'\r\nimport Userbox from './userbox'; \r\nimport './match.css';\r\n\r\n\r\nconst champion_dict = {266: 'Aatrox', 103: 'Ahri', 84: 'Akali', 12: 'Alistar', 32: 'Amumu', 34: 'Anivia', 1: 'Annie', 523: 'Aphelios', 22: 'Ashe', 136: 'AurelionSol', 268: 'Azir', 432: 'Bard', 53: 'Blitzcrank', 63: 'Brand', 201: 'Braum', 51: 'Caitlyn', 164: 'Camille', 69: 'Cassiopeia', 31: 'Chogath', 42: 'Corki', 122: 'Darius', 131: 'Diana', 119: 'Draven', 36: 'DrMundo', 245: 'Ekko', 60: 'Elise', 28: 'Evelynn', 81: 'Ezreal', 9: 'Fiddlesticks', 114: 'Fiora', 105: 'Fizz', 3: 'Galio', 41: 'Gangplank', 86: 'Garen', 150: 'Gnar', 79: 'Gragas', 104: 'Graves', 120: 'Hecarim', 74: 'Heimerdinger', 420: 'Illaoi', 39: 'Irelia', 427: 'Ivern', 40: 'Janna', 59: 'JarvanIV', 24: 'Jax', 126: 'Jayce', 202: 'Jhin', 222: 'Jinx', 145: 'Kaisa', 429: 'Kalista', 43: 'Karma', 30: 'Karthus', 38: 'Kassadin', 55: 'Katarina', 10: 'Kayle', 141: 'Kayn', 85: 'Kennen', 121: 'Khazix', 203: 'Kindred', 240: 'Kled', 96: 'KogMaw', 7: 'Leblanc', 64: 'LeeSin', 89: 'Leona', 876: 'Lillia', 127: 'Lissandra', 236: 'Lucian', 117: 'Lulu', 99: 'Lux', 54: 'Malphite', 90: 'Malzahar', 57: 'Maokai', 11: 'MasterYi', 21: 'MissFortune', 62: 'MonkeyKing', 82: 'Mordekaiser', 25: 'Morgana', 267: 'Nami', 75: 'Nasus', 111: 'Nautilus', 518: 'Neeko', 76: 'Nidalee', 56: 'Nocturne', 20: 'Nunu', 2: 'Olaf', 61: 'Orianna', 516: 'Ornn', 80: 'Pantheon', 78: 'Poppy', 555: 'Pyke', 246: 'Qiyana', 133: 'Quinn', 497: 'Rakan', 33: 'Rammus', 421: 'RekSai', 526: 'Rell', 58: 'Renekton', 107: 'Rengar', 92: 'Riven', 68: 'Rumble', 13: 'Ryze', 360: 'Samira', 113: 'Sejuani', 235: 'Senna', 147: 'Seraphine', 875: 'Sett', 35: 'Shaco', 98: 'Shen', 102: 'Shyvana', 27: 'Singed', 14: 'Sion', 15: 'Sivir', 72: 'Skarner', 37: 'Sona', 16: 'Soraka', 50: 'Swain', 517: 'Sylas', 134: 'Syndra', 223: 'TahmKench', 163: 'Taliyah', 91: 'Talon', 44: 'Taric', 17: 'Teemo', 412: 'Thresh', 18: 'Tristana', 48: 'Trundle', 23: 'Tryndamere', 4: 'TwistedFate', 29: 'Twitch', 77: 'Udyr', 6: 'Urgot', 110: 'Varus', 67: 'Vayne', 45: 'Veigar', 161: 'Velkoz', 254: 'Vi', 234: 'Viego', 112: 'Viktor', 8: 'Vladimir', 106: 'Volibear', 19: 'Warwick', 498: 'Xayah', 101: 'Xerath', 5: 'XinZhao', 157: 'Yasuo', 777: 'Yone', 83: 'Yorick', 350: 'Yuumi', 154: 'Zac', 238: 'Zed', 115: 'Ziggs', 26: 'Zilean', 142: 'Zoe', 143: 'Zyra'}\r\nconst spell_dict = {21: 'SummonerBarrier', 1: 'SummonerBoost', 14: 'SummonerDot', 3: 'SummonerExhaust', 4: 'SummonerFlash', 6: 'SummonerHaste', 7: 'SummonerHeal', 13: 'SummonerMana', 30: 'SummonerPoroRecall', 31: 'SummonerPoroThrow', 11: 'SummonerSmite', 39: 'SummonerSnowURFSnowball_Mark', 32: 'SummonerSnowball', 12: 'SummonerTeleport'}\r\n\r\nconst match=(props)=>{\r\n\r\n    \r\n    const typeTo = (type) =>{\r\n        if(type==420) return '솔랭'\r\n        if(type==430) return '노말'\r\n        if(type==440) return '자랭'\r\n        if(type==450) return '칼바람'\r\n        return '뭔데시발'\r\n    }\r\n\r\n\r\n    const targetuser = props.info[\"participants\"][\"1\"][\"summonerName\"] == props.user ? props.info[\"participants\"][\"1\"] : \r\n                    props.info[\"participants\"][\"2\"][\"summonerName\"] == props.user ? props.info[\"participants\"][\"2\"] :\r\n                    props.info[\"participants\"][\"3\"][\"summonerName\"] == props.user ? props.info[\"participants\"][\"3\"] : \r\n                    props.info[\"participants\"][\"4\"][\"summonerName\"] == props.user ? props.info[\"participants\"][\"4\"] : \r\n                    props.info[\"participants\"][\"5\"][\"summonerName\"] == props.user ? props.info[\"participants\"][\"5\"] : \r\n                    props.info[\"participants\"][\"6\"][\"summonerName\"] == props.user ? props.info[\"participants\"][\"6\"] : \r\n                    props.info[\"participants\"][\"7\"][\"summonerName\"] == props.user ? props.info[\"participants\"][\"7\"] : \r\n                    props.info[\"participants\"][\"8\"][\"summonerName\"] == props.user ? props.info[\"participants\"][\"8\"] : \r\n                    props.info[\"participants\"][\"9\"][\"summonerName\"] == props.user ? props.info[\"participants\"][\"9\"] : \r\n                    props.info[\"participants\"][\"10\"][\"summonerName\"] == props.user ? props.info[\"participants\"][\"10\"] : \"시발뭐지?\";\r\n    \r\n    const team1_worst = () =>{\r\n        let worst = props.info[\"participants\"][\"1\"][\"summonerName\"];\r\n        let worst_rank = props.info[\"participants\"][\"1\"]['ranking']\r\n        for(var i=2; i<=5; i++){\r\n            if(worst_rank < props.info[\"participants\"][String(i)]['ranking']){\r\n                worst = props.info[\"participants\"][String(i)][\"summonerName\"];\r\n                worst_rank = props.info[\"participants\"][String(i)]['ranking'];\r\n            }\r\n        }\r\n        return worst;\r\n    }\r\n\r\n    const team2_worst = () =>{\r\n        let worst = props.info[\"participants\"][\"6\"][\"summonerName\"];\r\n        let worst_rank = props.info[\"participants\"][\"6\"]['ranking']\r\n        for(var i=7; i<=10; i++){\r\n            if(worst_rank < props.info[\"participants\"][String(i)]['ranking']){\r\n                worst = props.info[\"participants\"][String(i)][\"summonerName\"];\r\n                worst_rank = props.info[\"participants\"][String(i)]['ranking'];\r\n            }\r\n        }\r\n        return worst;\r\n    }\r\n\r\n    return(\r\n        <Segment className={targetuser[\"win\"]? 'matchbox_win':'matchbox_loss'}>\r\n            <Grid>\r\n                <Grid.Column width={4} >\r\n                    <Grid.Row  >\r\n                        <div style={{textAlign:'left'}}>\r\n                            <span className='rank_type'>{typeTo(props.info['queueId'])} </span>\r\n                            <span className={targetuser[\"win\"]? 'game_result':'game_result1'} >{targetuser[\"win\"]? '승리':'패배'}</span>\r\n                        </div>\r\n                    </Grid.Row>\r\n                    <Grid.Row>\r\n\r\n                        <Grid>\r\n                        <Grid.Row columns={3}>\r\n                            <Grid.Column width={7} verticalAlign='middle'>\r\n                                <img src={'http://ddragon.leagueoflegends.com/cdn/11.9.1/img/champion/'+targetuser['champion']+'.png'} className='champion_img' />\r\n                            </Grid.Column>\r\n                            <Grid.Column width={4} verticalAlign='middle'>\r\n                                <img src={'http://ddragon.leagueoflegends.com/cdn/11.9.1/img/spell/'+spell_dict[targetuser['spell1']]+'.png'} className='spell_img'/>\r\n                                <img src={'http://ddragon.leagueoflegends.com/cdn/11.9.1/img/spell/'+spell_dict[targetuser['spell2']]+'.png'} className='spell_img'/>\r\n                            </Grid.Column>\r\n                            <Grid.Column width={5} verticalAlign='middle'>\r\n                                <div className='kda_score'>{targetuser['kills']} / {targetuser['deaths']} / {targetuser['assists']}</div>\r\n                                <div className='kda'>({Number(targetuser['deaths'])==0 ? 'Perfect': ((Number(targetuser['kills'])+Number(targetuser['assists']))/Number(targetuser['deaths'])).toFixed(1)})</div>\r\n                                <br/>\r\n                            </Grid.Column>\r\n                        </Grid.Row>\r\n                        </Grid>\r\n\r\n                    </Grid.Row>\r\n                </Grid.Column>\r\n                <Grid.Column width={2} className={props.info[\"participants\"][\"1\"]['win']?'fucking1':'fucking2'} textAlign='center' floated='right'>\r\n                    <div className={props.info[\"participants\"][\"1\"]['win']?'fucking1':'fucking2'}>{props.info[\"participants\"][\"1\"]['win']? '버스 탑승러❤':'패배의 원흉'}</div>\r\n                    <br/>\r\n                    {team1_worst()}\r\n                </Grid.Column>        \r\n                <Grid.Column width={3} verticalAlign='middle'>\r\n                    <Userbox user={props.info['participants'][\"1\"]} champion={props.info['participants']['1']['champion']}/>\r\n                    <Userbox user={props.info['participants']['2']} champion={props.info['participants']['2']['champion']}/>\r\n                    <Userbox user={props.info['participants']['3']} champion={props.info['participants']['3']['champion']}/>\r\n                    <Userbox user={props.info['participants']['4']} champion={props.info['participants']['4']['champion']}/>\r\n                    <Userbox user={props.info['participants']['5']} champion={props.info['participants']['5']['champion']}/>\r\n                </Grid.Column>        \r\n                <Grid.Column width={3} verticalAlign='middle'>\r\n                    <Userbox right={true} user={props.info['participants']['6']} champion={props.info['participants']['6']['champion']}/>\r\n                    <Userbox right={true} user={props.info['participants']['7']} champion={props.info['participants']['7']['champion']}/>\r\n                    <Userbox right={true} user={props.info['participants']['8']} champion={props.info['participants']['8']['champion']}/>\r\n                    <Userbox right={true} user={props.info['participants']['9']} champion={props.info['participants']['9']['champion']}/>\r\n                    <Userbox right={true} user={props.info['participants']['10']} champion={props.info['participants']['10']['champion']}/>\r\n                </Grid.Column>        \r\n                <Grid.Column width={3} className={props.info[\"participants\"][\"6\"]['win']?'fucking1':'fucking2'}  textAlign='center'>\r\n                    <div className={'1'}>{props.info[\"participants\"][\"6\"]['win']? '버스 탑승러❤':'패배의 원흉'}</div>\r\n                    <br/>\r\n                    {team2_worst()}\r\n                </Grid.Column>                         \r\n            </Grid>\r\n        </Segment>\r\n    )\r\n}\r\n\r\nexport default match\r\n\r\n\r\n","/home/ubuntu/WhosFault/frontend/src/match/userbox.js",["172","173","174","175","176","177","178","179","180","181","182","183","184","185"],"import React, { useState, useEffect } from 'react';\r\nimport { Dropdown, Input, Header,Image, Container, Menu, Grid, Form, Segment, Icon  } from 'semantic-ui-react'\r\n\r\nimport './userbox.css';\r\n\r\nconst userbox=(props)=>{\r\n\r\n\r\n\r\n    if(props.right)\r\n        return(\r\n        <div className='userbox_right'>\r\n            <span>\r\n            <img src={'http://ddragon.leagueoflegends.com/cdn/11.5.1/img/champion/'+props.champion+'.png'} className='userbox_img'/>\r\n            </span>\r\n            &nbsp;\r\n            <span className='usernickname'>{props.user[\"summonerName\"]}</span>\r\n        </div>\r\n        )\r\n    else\r\n        return(\r\n        <div className='userbox_left'>\r\n            <span className='usernickname'>{props.user[\"summonerName\"]}</span>\r\n            &nbsp;\r\n            <span>\r\n            <img src={'http://ddragon.leagueoflegends.com/cdn/11.5.1/img/champion/'+props.champion+'.png'} className='userbox_img'/>\r\n            </span>\r\n            \r\n        </div>\r\n        )\r\n}\r\n\r\nexport default userbox",{"ruleId":"186","severity":1,"message":"187","line":8,"column":8,"nodeType":"188","messageId":"189","endLine":8,"endColumn":12},{"ruleId":"186","severity":1,"message":"190","line":1,"column":17,"nodeType":"188","messageId":"189","endLine":1,"endColumn":25},{"ruleId":"186","severity":1,"message":"191","line":1,"column":27,"nodeType":"188","messageId":"189","endLine":1,"endColumn":36},{"ruleId":"186","severity":1,"message":"192","line":3,"column":8,"nodeType":"188","messageId":"189","endLine":3,"endColumn":12},{"ruleId":"186","severity":1,"message":"191","line":1,"column":27,"nodeType":"188","messageId":"189","endLine":1,"endColumn":36},{"ruleId":"186","severity":1,"message":"193","line":2,"column":40,"nodeType":"188","messageId":"189","endLine":2,"endColumn":49},{"ruleId":"194","severity":1,"message":"195","line":19,"column":22,"nodeType":"196","messageId":"197","endLine":19,"endColumn":24},{"ruleId":"194","severity":1,"message":"198","line":24,"column":17,"nodeType":"196","messageId":"197","endLine":24,"endColumn":19},{"ruleId":"194","severity":1,"message":"195","line":24,"column":40,"nodeType":"196","messageId":"197","endLine":24,"endColumn":42},{"ruleId":"186","severity":1,"message":"199","line":2,"column":10,"nodeType":"188","messageId":"189","endLine":2,"endColumn":18},{"ruleId":"186","severity":1,"message":"200","line":2,"column":20,"nodeType":"188","messageId":"189","endLine":2,"endColumn":25},{"ruleId":"186","severity":1,"message":"201","line":2,"column":27,"nodeType":"188","messageId":"189","endLine":2,"endColumn":33},{"ruleId":"186","severity":1,"message":"202","line":2,"column":34,"nodeType":"188","messageId":"189","endLine":2,"endColumn":39},{"ruleId":"186","severity":1,"message":"193","line":2,"column":41,"nodeType":"188","messageId":"189","endLine":2,"endColumn":50},{"ruleId":"186","severity":1,"message":"203","line":2,"column":52,"nodeType":"188","messageId":"189","endLine":2,"endColumn":56},{"ruleId":"186","severity":1,"message":"204","line":2,"column":58,"nodeType":"188","messageId":"189","endLine":2,"endColumn":62},{"ruleId":"186","severity":1,"message":"205","line":2,"column":64,"nodeType":"188","messageId":"189","endLine":2,"endColumn":68},{"ruleId":"186","severity":1,"message":"206","line":2,"column":70,"nodeType":"188","messageId":"189","endLine":2,"endColumn":77},{"ruleId":"186","severity":1,"message":"207","line":4,"column":8,"nodeType":"188","messageId":"189","endLine":4,"endColumn":14},{"ruleId":"186","severity":1,"message":"208","line":5,"column":8,"nodeType":"188","messageId":"189","endLine":5,"endColumn":15},{"ruleId":"186","severity":1,"message":"209","line":13,"column":8,"nodeType":"188","messageId":"189","endLine":13,"endColumn":16},{"ruleId":"186","severity":1,"message":"210","line":19,"column":7,"nodeType":"188","messageId":"189","endLine":19,"endColumn":14},{"ruleId":"194","severity":1,"message":"198","line":26,"column":11,"nodeType":"196","messageId":"197","endLine":26,"endColumn":13},{"ruleId":"194","severity":1,"message":"198","line":119,"column":21,"nodeType":"196","messageId":"197","endLine":119,"endColumn":23},{"ruleId":"194","severity":1,"message":"198","line":132,"column":45,"nodeType":"196","messageId":"197","endLine":132,"endColumn":47},{"ruleId":"211","severity":1,"message":"212","line":143,"column":7,"nodeType":"213","endLine":143,"endColumn":18,"suggestions":"214"},{"ruleId":"194","severity":1,"message":"198","line":146,"column":21,"nodeType":"196","messageId":"197","endLine":146,"endColumn":23},{"ruleId":"194","severity":1,"message":"198","line":152,"column":84,"nodeType":"196","messageId":"197","endLine":152,"endColumn":86},{"ruleId":"211","severity":1,"message":"215","line":165,"column":7,"nodeType":"213","endLine":165,"endColumn":18,"suggestions":"216"},{"ruleId":"194","severity":1,"message":"198","line":341,"column":18,"nodeType":"196","messageId":"197","endLine":341,"endColumn":20},{"ruleId":"194","severity":1,"message":"198","line":359,"column":23,"nodeType":"196","messageId":"197","endLine":359,"endColumn":25},{"ruleId":"194","severity":1,"message":"198","line":368,"column":23,"nodeType":"196","messageId":"197","endLine":368,"endColumn":25},{"ruleId":"194","severity":1,"message":"198","line":377,"column":23,"nodeType":"196","messageId":"197","endLine":377,"endColumn":25},{"ruleId":"194","severity":1,"message":"198","line":377,"column":42,"nodeType":"196","messageId":"197","endLine":377,"endColumn":44},{"ruleId":"194","severity":1,"message":"198","line":388,"column":23,"nodeType":"196","messageId":"197","endLine":388,"endColumn":25},{"ruleId":"194","severity":1,"message":"198","line":388,"column":42,"nodeType":"196","messageId":"197","endLine":388,"endColumn":44},{"ruleId":"217","severity":1,"message":"218","line":396,"column":17,"nodeType":"219","endLine":396,"endColumn":90},{"ruleId":"186","severity":1,"message":"199","line":2,"column":10,"nodeType":"188","messageId":"189","endLine":2,"endColumn":18},{"ruleId":"186","severity":1,"message":"200","line":2,"column":20,"nodeType":"188","messageId":"189","endLine":2,"endColumn":25},{"ruleId":"186","severity":1,"message":"201","line":2,"column":27,"nodeType":"188","messageId":"189","endLine":2,"endColumn":33},{"ruleId":"186","severity":1,"message":"202","line":2,"column":34,"nodeType":"188","messageId":"189","endLine":2,"endColumn":39},{"ruleId":"186","severity":1,"message":"193","line":2,"column":41,"nodeType":"188","messageId":"189","endLine":2,"endColumn":50},{"ruleId":"186","severity":1,"message":"203","line":2,"column":52,"nodeType":"188","messageId":"189","endLine":2,"endColumn":56},{"ruleId":"186","severity":1,"message":"204","line":2,"column":58,"nodeType":"188","messageId":"189","endLine":2,"endColumn":62},{"ruleId":"186","severity":1,"message":"205","line":2,"column":64,"nodeType":"188","messageId":"189","endLine":2,"endColumn":68},{"ruleId":"186","severity":1,"message":"206","line":2,"column":70,"nodeType":"188","messageId":"189","endLine":2,"endColumn":77},{"ruleId":"186","severity":1,"message":"220","line":2,"column":79,"nodeType":"188","messageId":"189","endLine":2,"endColumn":83},{"ruleId":"186","severity":1,"message":"221","line":5,"column":8,"nodeType":"188","messageId":"189","endLine":5,"endColumn":12},{"ruleId":"194","severity":1,"message":"198","line":20,"column":16,"nodeType":"196","messageId":"197","endLine":20,"endColumn":18},{"ruleId":"194","severity":1,"message":"198","line":23,"column":12,"nodeType":"196","messageId":"197","endLine":23,"endColumn":14},{"ruleId":"194","severity":1,"message":"198","line":26,"column":12,"nodeType":"196","messageId":"197","endLine":26,"endColumn":14},{"ruleId":"194","severity":1,"message":"198","line":29,"column":12,"nodeType":"196","messageId":"197","endLine":29,"endColumn":14},{"ruleId":"194","severity":1,"message":"198","line":32,"column":12,"nodeType":"196","messageId":"197","endLine":32,"endColumn":14},{"ruleId":"194","severity":1,"message":"198","line":35,"column":12,"nodeType":"196","messageId":"197","endLine":35,"endColumn":14},{"ruleId":"194","severity":1,"message":"198","line":38,"column":12,"nodeType":"196","messageId":"197","endLine":38,"endColumn":14},{"ruleId":"194","severity":1,"message":"198","line":41,"column":12,"nodeType":"196","messageId":"197","endLine":41,"endColumn":14},{"ruleId":"194","severity":1,"message":"198","line":44,"column":12,"nodeType":"196","messageId":"197","endLine":44,"endColumn":14},{"ruleId":"194","severity":1,"message":"198","line":51,"column":12,"nodeType":"196","messageId":"197","endLine":51,"endColumn":14},{"ruleId":"211","severity":1,"message":"222","line":81,"column":5,"nodeType":"188","endLine":81,"endColumn":14,"suggestions":"223"},{"ruleId":"194","severity":1,"message":"195","line":82,"column":35,"nodeType":"196","messageId":"197","endLine":82,"endColumn":37},{"ruleId":"217","severity":1,"message":"218","line":97,"column":17,"nodeType":"219","endLine":97,"endColumn":67},{"ruleId":"217","severity":1,"message":"218","line":119,"column":17,"nodeType":"219","endLine":119,"endColumn":68},{"ruleId":"186","severity":1,"message":"191","line":1,"column":27,"nodeType":"188","messageId":"189","endLine":1,"endColumn":36},{"ruleId":"186","severity":1,"message":"193","line":2,"column":41,"nodeType":"188","messageId":"189","endLine":2,"endColumn":50},{"ruleId":"186","severity":1,"message":"203","line":2,"column":52,"nodeType":"188","messageId":"189","endLine":2,"endColumn":56},{"ruleId":"186","severity":1,"message":"205","line":2,"column":64,"nodeType":"188","messageId":"189","endLine":2,"endColumn":68},{"ruleId":"186","severity":1,"message":"206","line":2,"column":70,"nodeType":"188","messageId":"189","endLine":2,"endColumn":77},{"ruleId":"186","severity":1,"message":"224","line":2,"column":79,"nodeType":"188","messageId":"189","endLine":2,"endColumn":85},{"ruleId":"194","severity":1,"message":"198","line":31,"column":17,"nodeType":"196","messageId":"197","endLine":31,"endColumn":19},{"ruleId":"186","severity":1,"message":"190","line":1,"column":17,"nodeType":"188","messageId":"189","endLine":1,"endColumn":25},{"ruleId":"186","severity":1,"message":"191","line":1,"column":27,"nodeType":"188","messageId":"189","endLine":1,"endColumn":36},{"ruleId":"186","severity":1,"message":"199","line":2,"column":10,"nodeType":"188","messageId":"189","endLine":2,"endColumn":18},{"ruleId":"186","severity":1,"message":"200","line":2,"column":20,"nodeType":"188","messageId":"189","endLine":2,"endColumn":25},{"ruleId":"186","severity":1,"message":"201","line":2,"column":27,"nodeType":"188","messageId":"189","endLine":2,"endColumn":33},{"ruleId":"186","severity":1,"message":"202","line":2,"column":34,"nodeType":"188","messageId":"189","endLine":2,"endColumn":39},{"ruleId":"186","severity":1,"message":"193","line":2,"column":41,"nodeType":"188","messageId":"189","endLine":2,"endColumn":50},{"ruleId":"186","severity":1,"message":"203","line":2,"column":52,"nodeType":"188","messageId":"189","endLine":2,"endColumn":56},{"ruleId":"186","severity":1,"message":"205","line":2,"column":64,"nodeType":"188","messageId":"189","endLine":2,"endColumn":68},{"ruleId":"186","severity":1,"message":"225","line":2,"column":79,"nodeType":"188","messageId":"189","endLine":2,"endColumn":85},{"ruleId":"217","severity":1,"message":"218","line":15,"column":21,"nodeType":"219","endLine":15,"endColumn":154},{"ruleId":"217","severity":1,"message":"218","line":37,"column":29,"nodeType":"219","endLine":37,"endColumn":155},{"ruleId":"186","severity":1,"message":"190","line":1,"column":17,"nodeType":"188","messageId":"189","endLine":1,"endColumn":25},{"ruleId":"186","severity":1,"message":"191","line":1,"column":27,"nodeType":"188","messageId":"189","endLine":1,"endColumn":36},{"ruleId":"186","severity":1,"message":"199","line":2,"column":10,"nodeType":"188","messageId":"189","endLine":2,"endColumn":18},{"ruleId":"186","severity":1,"message":"200","line":2,"column":20,"nodeType":"188","messageId":"189","endLine":2,"endColumn":25},{"ruleId":"186","severity":1,"message":"201","line":2,"column":27,"nodeType":"188","messageId":"189","endLine":2,"endColumn":33},{"ruleId":"186","severity":1,"message":"202","line":2,"column":34,"nodeType":"188","messageId":"189","endLine":2,"endColumn":39},{"ruleId":"186","severity":1,"message":"193","line":2,"column":41,"nodeType":"188","messageId":"189","endLine":2,"endColumn":50},{"ruleId":"186","severity":1,"message":"203","line":2,"column":52,"nodeType":"188","messageId":"189","endLine":2,"endColumn":56},{"ruleId":"186","severity":1,"message":"205","line":2,"column":64,"nodeType":"188","messageId":"189","endLine":2,"endColumn":68},{"ruleId":"186","severity":1,"message":"220","line":2,"column":79,"nodeType":"188","messageId":"189","endLine":2,"endColumn":83},{"ruleId":"186","severity":1,"message":"226","line":7,"column":7,"nodeType":"188","messageId":"189","endLine":7,"endColumn":20},{"ruleId":"194","severity":1,"message":"198","line":14,"column":16,"nodeType":"196","messageId":"197","endLine":14,"endColumn":18},{"ruleId":"194","severity":1,"message":"198","line":15,"column":16,"nodeType":"196","messageId":"197","endLine":15,"endColumn":18},{"ruleId":"194","severity":1,"message":"198","line":16,"column":16,"nodeType":"196","messageId":"197","endLine":16,"endColumn":18},{"ruleId":"194","severity":1,"message":"198","line":17,"column":16,"nodeType":"196","messageId":"197","endLine":17,"endColumn":18},{"ruleId":"194","severity":1,"message":"198","line":22,"column":72,"nodeType":"196","messageId":"197","endLine":22,"endColumn":74},{"ruleId":"194","severity":1,"message":"198","line":23,"column":69,"nodeType":"196","messageId":"197","endLine":23,"endColumn":71},{"ruleId":"194","severity":1,"message":"198","line":24,"column":69,"nodeType":"196","messageId":"197","endLine":24,"endColumn":71},{"ruleId":"194","severity":1,"message":"198","line":25,"column":69,"nodeType":"196","messageId":"197","endLine":25,"endColumn":71},{"ruleId":"194","severity":1,"message":"198","line":26,"column":69,"nodeType":"196","messageId":"197","endLine":26,"endColumn":71},{"ruleId":"194","severity":1,"message":"198","line":27,"column":69,"nodeType":"196","messageId":"197","endLine":27,"endColumn":71},{"ruleId":"194","severity":1,"message":"198","line":28,"column":69,"nodeType":"196","messageId":"197","endLine":28,"endColumn":71},{"ruleId":"194","severity":1,"message":"198","line":29,"column":69,"nodeType":"196","messageId":"197","endLine":29,"endColumn":71},{"ruleId":"194","severity":1,"message":"198","line":30,"column":69,"nodeType":"196","messageId":"197","endLine":30,"endColumn":71},{"ruleId":"194","severity":1,"message":"198","line":31,"column":70,"nodeType":"196","messageId":"197","endLine":31,"endColumn":72},{"ruleId":"217","severity":1,"message":"218","line":72,"column":33,"nodeType":"219","endLine":72,"endColumn":163},{"ruleId":"217","severity":1,"message":"218","line":75,"column":33,"nodeType":"219","endLine":75,"endColumn":166},{"ruleId":"217","severity":1,"message":"218","line":76,"column":33,"nodeType":"219","endLine":76,"endColumn":166},{"ruleId":"194","severity":1,"message":"198","line":80,"column":84,"nodeType":"196","messageId":"197","endLine":80,"endColumn":86},{"ruleId":"186","severity":1,"message":"190","line":1,"column":17,"nodeType":"188","messageId":"189","endLine":1,"endColumn":25},{"ruleId":"186","severity":1,"message":"191","line":1,"column":27,"nodeType":"188","messageId":"189","endLine":1,"endColumn":36},{"ruleId":"186","severity":1,"message":"199","line":2,"column":10,"nodeType":"188","messageId":"189","endLine":2,"endColumn":18},{"ruleId":"186","severity":1,"message":"200","line":2,"column":20,"nodeType":"188","messageId":"189","endLine":2,"endColumn":25},{"ruleId":"186","severity":1,"message":"201","line":2,"column":27,"nodeType":"188","messageId":"189","endLine":2,"endColumn":33},{"ruleId":"186","severity":1,"message":"202","line":2,"column":34,"nodeType":"188","messageId":"189","endLine":2,"endColumn":39},{"ruleId":"186","severity":1,"message":"193","line":2,"column":41,"nodeType":"188","messageId":"189","endLine":2,"endColumn":50},{"ruleId":"186","severity":1,"message":"203","line":2,"column":52,"nodeType":"188","messageId":"189","endLine":2,"endColumn":56},{"ruleId":"186","severity":1,"message":"204","line":2,"column":58,"nodeType":"188","messageId":"189","endLine":2,"endColumn":62},{"ruleId":"186","severity":1,"message":"205","line":2,"column":64,"nodeType":"188","messageId":"189","endLine":2,"endColumn":68},{"ruleId":"186","severity":1,"message":"206","line":2,"column":70,"nodeType":"188","messageId":"189","endLine":2,"endColumn":77},{"ruleId":"186","severity":1,"message":"220","line":2,"column":79,"nodeType":"188","messageId":"189","endLine":2,"endColumn":83},{"ruleId":"217","severity":1,"message":"218","line":14,"column":13,"nodeType":"219","endLine":14,"endColumn":133},{"ruleId":"217","severity":1,"message":"218","line":26,"column":13,"nodeType":"219","endLine":26,"endColumn":133},"no-unused-vars","'Riot' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'useEffect' is defined but never used.","'riot' is defined but never used.","'Container' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","'Dropdown' is defined but never used.","'Input' is defined but never used.","'Header' is defined but never used.","'Image' is defined but never used.","'Menu' is defined but never used.","'Grid' is defined but never used.","'Form' is defined but never used.","'Segment' is defined but never used.","'finger' is defined but never used.","'RankBox' is defined but never used.","'question' is defined but never used.","'options' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.match.params.username'. Either include it or remove the dependency array.","ArrayExpression",["227"],"React Hook useEffect has missing dependencies: 'props.match.params.username' and 'userName'. Either include them or remove the dependency array.",["228"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Icon' is defined but never used.","'iron' is defined but never used.","React Hook useEffect contains a call to 'set_rank'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [props.rankinfo] as a second argument to the useEffect Hook.",["229"],"'Button' is defined but never used.","'Loader' is defined but never used.","'champion_dict' is assigned a value but never used.",{"desc":"230","fix":"231"},{"desc":"232","fix":"233"},{"desc":"234","fix":"235"},"Update the dependencies array to be: [props.match.params.username, userReady]",{"range":"236","text":"237"},"Update the dependencies array to be: [props.match.params.username, userName, userReady]",{"range":"238","text":"239"},"Add dependencies array: [props.rankinfo]",{"range":"240","text":"241"},[3773,3784],"[props.match.params.username, userReady]",[4570,4581],"[props.match.params.username, userName, userReady]",[2336,2336],", [props.rankinfo]"]